{
  "content": "# MSAL provider\nThe MSAL Provider uses MSAL.js to sign in users and acquire tokens to use with the Microsoft Graph.\n\nTo learn more, see providers.\n\n### Get Started\nYou can initialize the MSAL provider in HTML or JavaScript.\n\n#### Initialize in your HTML page\nInitializing the MSAL provider in HTML is the simplest way to create a new provider. Use the `mgt-msal-provider` component to set the **client-id** and other properties. This will create a new `UserAgentApplication` instance that will be used for all authentication and acquiring tokens.\n```html\n<mgt-msal-provider client-id='<YOUR_CLIENT_ID>'                   \n                   login-type='redirect/popup'                   \n                   scopes='user.read,people.read'                   \n                   authority=''></mgt-msal-provider>\n```\nYou must provide a `clientId` (to create a new `UserAgentApplication`).\n\n#### Initialize in JavaScript\nYou can provide more options by initializing the provider in JavaScript.\n```ts\nimport {Providers, MsalProvider} from '@microsoft/mgt';\nimport {UserAgentApplication} from 'msal';\n\nProviders.globalProvider = new MsalProvider(config: MsalConfig);\n```\nwhere MsalConfig is:\n```ts\ninterface MsalConfig {\n  clientId: string;\n  scopes?: string[];\n  authority?: string;\n  loginType?: LoginType;\n  options?: Configuration; // msal js Configuration object\n}\n```\nYou must provide a `clientId` (to create a new `UserAgentApplication`).\n\nTo learn more, see the MSAL documentation.\n### Creating an app/client ID\nFor details about how to register an app and get a client ID, see the Register an app quick start.\n> **Note**: MSAL only supports the Implicit Flow for OAuth. Make sure to enable Implicit Flow in your application in the Azure Portal (it is not enabled by default). Under **Authentication**, find the **Implicit grant** section and select the checkboxes for **Access tokens** and **ID tokens**."
}
